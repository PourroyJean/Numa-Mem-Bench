Starting benchmarking process at Fri 18 Apr 2025 01:22:35 PM EEST

================================================================================
=                  NUMA-Aware Benchmark Configuration Tool  v 1.0              =
================================================================================

# Architecture Configuration 
System: LUMI
Partition: PART-G
CCDs per NUMA domain: 2
Detected 4 NUMA nodes
Found SKIP_CORES directive: 24 16 0 8 56 48 40 32
--------------------------------------------------------------------------------
Job started on Fri 18 Apr 2025 01:22:35 PM EEST in directory: /pfs/lustrep4/users/pourroy/CODE/Numa-Mem-Bench/examples/FINAL/example3_all_cores_512MB/results_scaling/job_10417453_lumig_all_cores_sequential
[ OK ] Created symlink: wrapper_numa.sh -> /pfs/lustrep4/users/pourroy/CODE/Numa-Mem-Bench/scripts/orchestrator/wrapper_numa.sh
[ OK ] Created symlink: numa_mem_bench -> /pfs/lustrep4/users/pourroy/CODE/Numa-Mem-Bench/numa_mem_bench
Created 2 symbolic links to required files

================================================================================
[ 4 RANKS ] Benchmark Configuration
[ 4 RANKS ] - Allocation Type  : sequential
[ 4 RANKS ] - Domains          : 0,1,2,3
[ 4 RANKS ] - Ranks per Domain : 1
[ 4 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 4 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 4 RANKS ] NUMA binding: 0,1,2,3
[ 4 RANKS ] CPU binding : 1,17,33,49
[ 4 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 4 --cpu-bind=map_cpu:1,17,33,49 --hint=nomultithread wrapper_numa.sh --numa=0,1,2,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_4ranks_512MB.csv
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_4ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 1
[Rank 1] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_4ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 2
[Rank 2] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_4ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 3
[Rank 3] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_4ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 4
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_4ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x422a40  |   0   | 100.61 |
|  001  | 17      |   1  | 0x4223e0  |   1   | 99.84  |
|  002  | 33      |   2  | 0x422420  |   2   | 99.27  |
|  003  | 49      |   3  | 0x422460  |   3   | 99.79  |
 =====================================================

[3] ===================== NUMA Statistics =====================
[3] Last Process: Rank 3
[3] Process ID: 7585
[3] Allocated Memory Size: 512 MB
[3] Running numastat...
[3] 
[3] Per-node process memory usage (in MBs) for PID 7585 (numa_mem_bench)
[3]                            Node 0          Node 1          Node 2          Node 3           Total
[3]                   --------------- --------------- --------------- --------------- ---------------
[3] Huge                         0.00            0.00            0.00            0.00            0.00
[3] Heap                         0.00            0.00            0.00          514.10          514.10
[3] Stack                        0.00            0.00            0.00            0.02            0.02
[3] Private                      8.25            1.21            2.28            4.48           16.21
[3] ----------------  --------------- --------------- --------------- --------------- ---------------
[3] Total                        8.25            1.21            2.28          518.61          530.34
[3]==========================================================

[ 4 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 8 RANKS ] Benchmark Configuration
[ 8 RANKS ] - Allocation Type  : sequential
[ 8 RANKS ] - Domains          : 0,1,2,3
[ 8 RANKS ] - Ranks per Domain : 2
[ 8 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 8 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 8 RANKS ] NUMA binding: 0,0,1,1,2,2,3,3
[ 8 RANKS ] CPU binding : 1,2,17,18,33,34,49,50
[ 8 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 8 --cpu-bind=map_cpu:1,2,17,18,33,34,49,50 --hint=nomultithread wrapper_numa.sh --numa=0,0,1,1,2,2,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_8ranks_512MB.csv
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 2
[Rank 4] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 2
[Rank 5] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 1
[Rank 2] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 1
[Rank 3] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 3
[Rank 6] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 3
[Rank 7] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_8ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 8
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_8ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x42a8c0  |   0   | 138.46 |
|  001  | 2       |   0  | 0x42a220  |   0   | 104.65 |
|  002  | 17      |   1  | 0x42a260  |   1   | 125.44 |
|  003  | 18      |   1  | 0x42a260  |   1   | 102.93 |
|  004  | 33      |   2  | 0x42a2a0  |   2   | 140.28 |
|  005  | 34      |   2  | 0x42a2a0  |   2   | 104.38 |
|  006  | 49      |   3  | 0x42a2e0  |   3   | 103.33 |
|  007  | 50      |   3  | 0x42a2e0  |   3   | 125.28 |
 =====================================================

[7] ===================== NUMA Statistics =====================
[7] Last Process: Rank 7
[7] Process ID: 7926
[7] Allocated Memory Size: 512 MB
[7] Running numastat...
[7] 
[7] Per-node process memory usage (in MBs) for PID 7926 (numa_mem_bench)
[7]                            Node 0          Node 1          Node 2          Node 3           Total
[7]                   --------------- --------------- --------------- --------------- ---------------
[7] Huge                         0.00            0.00            0.00            0.00            0.00
[7] Heap                         0.00            0.00            0.00          514.13          514.13
[7] Stack                        0.00            0.00            0.00            0.02            0.02
[7] Private                      8.29            1.25            2.30            4.43           16.27
[7] ----------------  --------------- --------------- --------------- --------------- ---------------
[7] Total                        8.29            1.25            2.30          518.59          530.43
[7]==========================================================

[ 8 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 12 RANKS ] Benchmark Configuration
[ 12 RANKS ] - Allocation Type  : sequential
[ 12 RANKS ] - Domains          : 0,1,2,3
[ 12 RANKS ] - Ranks per Domain : 3
[ 12 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 12 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 12 RANKS ] NUMA binding: 0,0,0,1,1,1,2,2,2,3,3,3
[ 12 RANKS ] CPU binding : 1,2,3,17,18,19,33,34,35,49,50,51
[ 12 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 12 --cpu-bind=map_cpu:1,2,3,17,18,19,33,34,35,49,50,51 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,1,1,1,2,2,2,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_12ranks_512MB.csv
[Rank 6] Binding to NUMA domain 2
[Rank 6] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 2
[Rank 7] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 2
[Rank 8] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 1
[Rank 3] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 3
[Rank 9] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 3
[Rank 10] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 3
[Rank 11] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 1
[Rank 4] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 1
[Rank 5] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_12ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 12
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_12ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x432b40  |   0   | 194.31 |
|  001  | 2       |   0  | 0x4324a0  |   0   | 126.45 |
|  002  | 3       |   0  | 0x4324a0  |   0   | 111.14 |
|  003  | 17      |   1  | 0x4324e0  |   1   | 137.18 |
|  004  | 18      |   1  | 0x4324e0  |   1   | 122.22 |
|  005  | 19      |   1  | 0x4324e0  |   1   | 111.36 |
|  006  | 33      |   2  | 0x432520  |   2   | 164.91 |
|  007  | 34      |   2  | 0x432520  |   2   | 146.45 |
|  008  | 35      |   2  | 0x432520  |   2   | 111.77 |
|  009  | 49      |   3  | 0x432560  |   3   | 168.77 |
|  010  | 50      |   3  | 0x432560  |   3   | 112.25 |
|  011  | 51      |   3  | 0x432560  |   3   | 146.50 |
 =====================================================

[11] ===================== NUMA Statistics =====================
[11] Last Process: Rank 11
[11] Process ID: 8268
[11] Allocated Memory Size: 512 MB
[11] Running numastat...
[11] 
[11] Per-node process memory usage (in MBs) for PID 8268 (numa_mem_bench)
[11]                            Node 0          Node 1          Node 2          Node 3           Total
[11]                   --------------- --------------- --------------- --------------- ---------------
[11] Huge                         0.00            0.00            0.00            0.00            0.00
[11] Heap                         0.00            0.00            0.00          514.17          514.17
[11] Stack                        0.00            0.00            0.00            0.02            0.02
[11] Private                      8.17            1.25            2.33            4.44           16.18
[11] ----------------  --------------- --------------- --------------- --------------- ---------------
[11] Total                        8.17            1.25            2.33          518.62          530.37
[11]==========================================================

[ 12 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 16 RANKS ] Benchmark Configuration
[ 16 RANKS ] - Allocation Type  : sequential
[ 16 RANKS ] - Domains          : 0,1,2,3
[ 16 RANKS ] - Ranks per Domain : 4
[ 16 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 16 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 16 RANKS ] NUMA binding: 0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3
[ 16 RANKS ] CPU binding : 1,2,3,4,17,18,19,20,33,34,35,36,49,50,51,52
[ 16 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 16 --cpu-bind=map_cpu:1,2,3,4,17,18,19,20,33,34,35,36,49,50,51,52 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_16ranks_512MB.csv
[Rank 14] Binding to NUMA domain 3
[Rank 14] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 3
[Rank 12] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 3
[Rank 13] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 3
[Rank 15] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 1
[Rank 4] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 1
[Rank 5] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 1
[Rank 6] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 1
[Rank 7] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 2
[Rank 9] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 2
[Rank 8] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 2
[Rank 10] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 2
[Rank 11] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_16ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 16
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_16ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x43a4a0  |   0   | 231.80 |
|  001  | 2       |   0  | 0x439df0  |   0   | 133.37 |
|  002  | 3       |   0  | 0x439df0  |   0   | 161.22 |
|  003  | 4       |   0  | 0x439df0  |   0   | 115.78 |
|  004  | 17      |   1  | 0x439e30  |   1   | 228.47 |
|  005  | 18      |   1  | 0x439e30  |   1   | 116.18 |
|  006  | 19      |   1  | 0x439e30  |   1   | 155.20 |
|  007  | 20      |   1  | 0x439e30  |   1   | 123.08 |
|  008  | 33      |   2  | 0x439e70  |   2   | 232.35 |
|  009  | 34      |   2  | 0x439e70  |   2   | 151.14 |
|  010  | 35      |   2  | 0x439e70  |   2   | 141.21 |
|  011  | 36      |   2  | 0x439e70  |   2   | 112.32 |
|  012  | 49      |   3  | 0x439eb0  |   3   | 206.78 |
|  013  | 50      |   3  | 0x439eb0  |   3   | 125.13 |
|  014  | 51      |   3  | 0x439eb0  |   3   | 213.91 |
|  015  | 52      |   3  | 0x439eb0  |   3   | 117.16 |
 =====================================================

[15] ===================== NUMA Statistics =====================
[15] Last Process: Rank 15
[15] Process ID: 8662
[15] Allocated Memory Size: 512 MB
[15] Running numastat...
[15] 
[15] Per-node process memory usage (in MBs) for PID 8662 (numa_mem_bench)
[15]                            Node 0          Node 1          Node 2          Node 3           Total
[15]                   --------------- --------------- --------------- --------------- ---------------
[15] Huge                         0.00            0.00            0.00            0.00            0.00
[15] Heap                         0.00            0.00            0.00          514.20          514.20
[15] Stack                        0.00            0.00            0.00            0.02            0.02
[15] Private                      8.14            1.20            2.30            4.41           16.05
[15] ----------------  --------------- --------------- --------------- --------------- ---------------
[15] Total                        8.14            1.20            2.30          518.62          530.26
[15]==========================================================

[ 16 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 20 RANKS ] Benchmark Configuration
[ 20 RANKS ] - Allocation Type  : sequential
[ 20 RANKS ] - Domains          : 0,1,2,3
[ 20 RANKS ] - Ranks per Domain : 5
[ 20 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 20 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 20 RANKS ] NUMA binding: 0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3
[ 20 RANKS ] CPU binding : 1,2,3,4,5,17,18,19,20,21,33,34,35,36,37,49,50,51,52,53
[ 20 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 20 --cpu-bind=map_cpu:1,2,3,4,5,17,18,19,20,21,33,34,35,36,37,49,50,51,52,53 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_20ranks_512MB.csv
[Rank 19] Binding to NUMA domain 3
[Rank 19] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 2
[Rank 10] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 2
[Rank 11] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 3
[Rank 15] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 3
[Rank 16] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 3
[Rank 17] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 3
[Rank 18] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 2
[Rank 12] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 1
[Rank 6] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 2
[Rank 13] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 2
[Rank 14] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 1
[Rank 5] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 1
[Rank 8] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 1
[Rank 9] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 1
[Rank 7] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_20ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 20
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_20ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x4424d0  |   0   | 260.22 |
|  001  | 2       |   0  | 0x441e30  |   0   | 164.13 |
|  002  | 3       |   0  | 0x441e30  |   0   | 119.11 |
|  003  | 4       |   0  | 0x441e30  |   0   | 124.96 |
|  004  | 5       |   0  | 0x441e30  |   0   | 177.52 |
|  005  | 17      |   1  | 0x441e70  |   1   | 251.27 |
|  006  | 18      |   1  | 0x441e70  |   1   | 187.87 |
|  007  | 19      |   1  | 0x441e70  |   1   | 118.06 |
|  008  | 20      |   1  | 0x441e70  |   1   | 130.61 |
|  009  | 21      |   1  | 0x441e70  |   1   | 147.22 |
|  010  | 33      |   2  | 0x441eb0  |   2   | 270.19 |
|  011  | 34      |   2  | 0x441eb0  |   2   | 151.62 |
|  012  | 35      |   2  | 0x441eb0  |   2   | 235.26 |
|  013  | 36      |   2  | 0x441eb0  |   2   | 130.52 |
|  014  | 37      |   2  | 0x441eb0  |   2   | 118.60 |
|  015  | 49      |   3  | 0x441ef0  |   3   | 269.62 |
|  016  | 50      |   3  | 0x441ef0  |   3   | 184.92 |
|  017  | 51      |   3  | 0x441ef0  |   3   | 207.74 |
|  018  | 52      |   3  | 0x441ef0  |   3   | 119.10 |
|  019  | 53      |   3  | 0x441ef0  |   3   | 130.02 |
 =====================================================

[19] ===================== NUMA Statistics =====================
[19] Last Process: Rank 19
[19] Process ID: 9144
[19] Allocated Memory Size: 512 MB
[19] Running numastat...
[19] 
[19] Per-node process memory usage (in MBs) for PID 9144 (numa_mem_bench)
[19]                            Node 0          Node 1          Node 2          Node 3           Total
[19]                   --------------- --------------- --------------- --------------- ---------------
[19] Huge                         0.00            0.00            0.00            0.00            0.00
[19] Heap                         0.00            0.00            0.00          514.23          514.23
[19] Stack                        0.00            0.00            0.00            0.02            0.02
[19] Private                      8.38            1.22            2.37            4.52           16.49
[19] ----------------  --------------- --------------- --------------- --------------- ---------------
[19] Total                        8.38            1.22            2.37          518.77          530.74
[19]==========================================================

[ 20 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 24 RANKS ] Benchmark Configuration
[ 24 RANKS ] - Allocation Type  : sequential
[ 24 RANKS ] - Domains          : 0,1,2,3
[ 24 RANKS ] - Ranks per Domain : 6
[ 24 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 24 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 24 RANKS ] NUMA binding: 0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3
[ 24 RANKS ] CPU binding : 1,2,3,4,5,6,17,18,19,20,21,22,33,34,35,36,37,38,49,50,51,52,53,54
[ 24 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 24 --cpu-bind=map_cpu:1,2,3,4,5,6,17,18,19,20,21,22,33,34,35,36,37,38,49,50,51,52,53,54 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_24ranks_512MB.csv
[Rank 22] Binding to NUMA domain 3
[Rank 22] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 3
[Rank 19] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 3
[Rank 21] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 3
[Rank 18] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 3
[Rank 20] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 3
[Rank 23] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 1
[Rank 8] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 2
[Rank 15] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 2
[Rank 13] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 1
[Rank 10] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 2
[Rank 16] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 1
[Rank 9] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 2
[Rank 12] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 2
[Rank 14] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 2
[Rank 17] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 1
[Rank 6] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 1
[Rank 7] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_24ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 24
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_24ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x44a380  |   0   | 307.20 |
|  001  | 2       |   0  | 0x449cd0  |   0   | 264.67 |
|  002  | 3       |   0  | 0x449cd0  |   0   | 270.40 |
|  003  | 4       |   0  | 0x449cd0  |   0   | 120.77 |
|  004  | 5       |   0  | 0x449cd0  |   0   | 126.89 |
|  005  | 6       |   0  | 0x449cd0  |   0   | 136.64 |
|  006  | 17      |   1  | 0x449d10  |   1   | 315.64 |
|  007  | 18      |   1  | 0x449d10  |   1   | 254.42 |
|  008  | 19      |   1  | 0x449d10  |   1   | 283.14 |
|  009  | 20      |   1  | 0x449d10  |   1   | 149.30 |
|  010  | 21      |   1  | 0x449d10  |   1   | 133.21 |
|  011  | 22      |   1  | 0x449d10  |   1   | 121.99 |
|  012  | 33      |   2  | 0x449d50  |   2   | 327.28 |
|  013  | 34      |   2  | 0x449d50  |   2   | 260.07 |
|  014  | 35      |   2  | 0x449d50  |   2   | 206.65 |
|  015  | 36      |   2  | 0x449d50  |   2   | 134.98 |
|  016  | 37      |   2  | 0x449d50  |   2   | 175.53 |
|  017  | 38      |   2  | 0x449d50  |   2   | 120.52 |
|  018  | 49      |   3  | 0x449d90  |   3   | 325.90 |
|  019  | 50      |   3  | 0x449d90  |   3   | 226.64 |
|  020  | 51      |   3  | 0x449d90  |   3   | 226.52 |
|  021  | 52      |   3  | 0x449d90  |   3   | 173.10 |
|  022  | 53      |   3  | 0x449d90  |   3   | 140.34 |
|  023  | 54      |   3  | 0x449d90  |   3   | 120.17 |
 =====================================================

[23] ===================== NUMA Statistics =====================
[23] Last Process: Rank 23
[23] Process ID: 9717
[23] Allocated Memory Size: 512 MB
[23] Running numastat...
[23] 
[23] Per-node process memory usage (in MBs) for PID 9717 (numa_mem_bench)
[23]                            Node 0          Node 1          Node 2          Node 3           Total
[23]                   --------------- --------------- --------------- --------------- ---------------
[23] Huge                         0.00            0.00            0.00            0.00            0.00
[23] Heap                         0.00            0.00            0.00          514.26          514.26
[23] Stack                        0.00            0.00            0.00            0.02            0.02
[23] Private                      8.10            1.19            2.37            4.54           16.19
[23] ----------------  --------------- --------------- --------------- --------------- ---------------
[23] Total                        8.10            1.19            2.37          518.81          530.46
[23]==========================================================

[ 24 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 28 RANKS ] Benchmark Configuration
[ 28 RANKS ] - Allocation Type  : sequential
[ 28 RANKS ] - Domains          : 0,1,2,3
[ 28 RANKS ] - Ranks per Domain : 7
[ 28 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 28 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 28 RANKS ] NUMA binding: 0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3
[ 28 RANKS ] CPU binding : 1,2,3,4,5,6,7,17,18,19,20,21,22,23,33,34,35,36,37,38,39,49,50,51,52,53,54,55
[ 28 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 28 --cpu-bind=map_cpu:1,2,3,4,5,6,7,17,18,19,20,21,22,23,33,34,35,36,37,38,39,49,50,51,52,53,54,55 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_28ranks_512MB.csv
[Rank 27] Binding to NUMA domain 3
[Rank 27] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 3
[Rank 23] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 3
[Rank 22] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 3
[Rank 25] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 3
[Rank 21] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 3
[Rank 24] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 3
[Rank 26] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 2
[Rank 17] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 2
[Rank 19] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 2
[Rank 14] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 2
[Rank 16] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 2
[Rank 15] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 2
[Rank 18] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 2
[Rank 20] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 1
[Rank 7] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 1
[Rank 8] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 1
[Rank 9] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 1
[Rank 10] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_28ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 28
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_28ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x452200  |   0   | 395.77 |
|  001  | 2       |   0  | 0x451b60  |   0   | 310.28 |
|  002  | 3       |   0  | 0x451b60  |   0   | 320.64 |
|  003  | 4       |   0  | 0x451b60  |   0   | 140.65 |
|  004  | 5       |   0  | 0x451b60  |   0   | 179.00 |
|  005  | 6       |   0  | 0x451b60  |   0   | 129.71 |
|  006  | 7       |   0  | 0x451b60  |   0   | 122.36 |
|  007  | 17      |   1  | 0x451ba0  |   1   | 313.82 |
|  008  | 18      |   1  | 0x451ba0  |   1   | 330.28 |
|  009  | 19      |   1  | 0x451ba0  |   1   | 394.08 |
|  010  | 20      |   1  | 0x451ba0  |   1   | 209.90 |
|  011  | 21      |   1  | 0x451ba0  |   1   | 190.82 |
|  012  | 22      |   1  | 0x451ba0  |   1   | 118.91 |
|  013  | 23      |   1  | 0x451ba0  |   1   | 153.23 |
|  014  | 33      |   2  | 0x451be0  |   2   | 395.45 |
|  015  | 34      |   2  | 0x451be0  |   2   | 241.29 |
|  016  | 35      |   2  | 0x451be0  |   2   | 288.97 |
|  017  | 36      |   2  | 0x451be0  |   2   | 266.65 |
|  018  | 37      |   2  | 0x451be0  |   2   | 169.70 |
|  019  | 38      |   2  | 0x451be0  |   2   | 148.26 |
|  020  | 39      |   2  | 0x451be0  |   2   | 121.93 |
|  021  | 49      |   3  | 0x451c20  |   3   | 389.44 |
|  022  | 50      |   3  | 0x451c20  |   3   | 316.19 |
|  023  | 51      |   3  | 0x451c20  |   3   | 289.26 |
|  024  | 52      |   3  | 0x451c20  |   3   | 206.45 |
|  025  | 53      |   3  | 0x451c20  |   3   | 187.87 |
|  026  | 54      |   3  | 0x451c20  |   3   | 122.71 |
|  027  | 55      |   3  | 0x451c20  |   3   | 131.53 |
 =====================================================

[27] ===================== NUMA Statistics =====================
[27] Last Process: Rank 27
[27] Process ID: 10381
[27] Allocated Memory Size: 512 MB
[27] Running numastat...
[27] 
[27] Per-node process memory usage (in MBs) for PID 10381 (numa_mem_bench)
[27]                            Node 0          Node 1          Node 2          Node 3           Total
[27]                   --------------- --------------- --------------- --------------- ---------------
[27] Huge                         0.00            0.00            0.00            0.00            0.00
[27] Heap                         0.00            0.00            0.00          514.29          514.29
[27] Stack                        0.00            0.00            0.00            0.02            0.02
[27] Private                      8.30            1.25            2.27            4.42           16.24
[27] ----------------  --------------- --------------- --------------- --------------- ---------------
[27] Total                        8.30            1.25            2.27          518.72          530.55
[27]==========================================================

[ 28 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 32 RANKS ] Benchmark Configuration
[ 32 RANKS ] - Allocation Type  : sequential
[ 32 RANKS ] - Domains          : 0,1,2,3
[ 32 RANKS ] - Ranks per Domain : 8
[ 32 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 32 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 32 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3
[ 32 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,17,18,19,20,21,22,23,25,33,34,35,36,37,38,39,41,49,50,51,52,53,54,55,57
[ 32 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 32 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,17,18,19,20,21,22,23,25,33,34,35,36,37,38,39,41,49,50,51,52,53,54,55,57 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_32ranks_512MB.csv
[Rank 30] Binding to NUMA domain 3
[Rank 30] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 1
[Rank 8] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 3
[Rank 26] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 3
[Rank 28] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 3
[Rank 24] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 3
[Rank 27] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 3
[Rank 25] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 3
[Rank 29] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 2
[Rank 21] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 2
[Rank 16] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 2
[Rank 20] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 1
[Rank 9] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 3
[Rank 31] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 1
[Rank 17] Binding to NUMA domain 2
[Rank 17] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 2
[Rank 18] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 2
[Rank 19] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 10] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 2
[Rank 23] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 2
[Rank 22] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_32ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 32
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_32ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x45a0b0  |   0   | 397.67 |
|  001  | 2       |   0  | 0x459a10  |   0   | 177.35 |
|  002  | 3       |   0  | 0x459a10  |   0   | 260.57 |
|  003  | 4       |   0  | 0x459a10  |   0   | 361.54 |
|  004  | 5       |   0  | 0x459a10  |   0   | 272.76 |
|  005  | 6       |   0  | 0x459a10  |   0   | 124.76 |
|  006  | 7       |   0  | 0x459a10  |   0   | 123.54 |
|  007  | 9       |   0  | 0x459a10  |   0   | 156.72 |
|  008  | 17      |   1  | 0x459a50  |   1   | 349.96 |
|  009  | 18      |   1  | 0x459a50  |   1   | 398.62 |
|  010  | 19      |   1  | 0x459a50  |   1   | 298.38 |
|  011  | 20      |   1  | 0x459a50  |   1   | 120.68 |
|  012  | 21      |   1  | 0x459a50  |   1   | 128.97 |
|  013  | 22      |   1  | 0x459a50  |   1   | 154.65 |
|  014  | 23      |   1  | 0x459a50  |   1   | 188.97 |
|  015  | 25      |   1  | 0x459a50  |   1   | 155.36 |
|  016  | 33      |   2  | 0x459a90  |   2   | 353.30 |
|  017  | 34      |   2  | 0x459a90  |   2   | 191.24 |
|  018  | 35      |   2  | 0x459a90  |   2   | 300.42 |
|  019  | 36      |   2  | 0x459a90  |   2   | 378.37 |
|  020  | 37      |   2  | 0x459a90  |   2   | 225.40 |
|  021  | 38      |   2  | 0x459a90  |   2   | 120.47 |
|  022  | 39      |   2  | 0x459a90  |   2   | 120.96 |
|  023  | 41      |   2  | 0x459a90  |   2   | 155.41 |
|  024  | 49      |   3  | 0x459ad0  |   3   | 395.24 |
|  025  | 50      |   3  | 0x459ad0  |   3   | 296.30 |
|  026  | 51      |   3  | 0x459ad0  |   3   | 277.98 |
|  027  | 52      |   3  | 0x459ad0  |   3   | 181.85 |
|  028  | 53      |   3  | 0x459ad0  |   3   | 164.65 |
|  029  | 54      |   3  | 0x459ad0  |   3   | 163.30 |
|  030  | 55      |   3  | 0x459ad0  |   3   | 122.86 |
|  031  | 57      |   3  | 0x459ad0  |   3   | 156.53 |
 =====================================================

[31] ===================== NUMA Statistics =====================
[31] Last Process: Rank 31
[31] Process ID: 11115
[31] Allocated Memory Size: 512 MB
[31] Running numastat...
[31] 
[31] Per-node process memory usage (in MBs) for PID 11115 (numa_mem_bench)
[31]                            Node 0          Node 1          Node 2          Node 3           Total
[31]                   --------------- --------------- --------------- --------------- ---------------
[31] Huge                         0.00            0.00            0.00            0.00            0.00
[31] Heap                         0.00            0.00            0.00          514.32          514.32
[31] Stack                        0.00            0.00            0.00            0.02            0.02
[31] Private                      8.33            1.26            2.31            4.48           16.38
[31] ----------------  --------------- --------------- --------------- --------------- ---------------
[31] Total                        8.33            1.26            2.31          518.81          530.71
[31]==========================================================

[ 32 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 36 RANKS ] Benchmark Configuration
[ 36 RANKS ] - Allocation Type  : sequential
[ 36 RANKS ] - Domains          : 0,1,2,3
[ 36 RANKS ] - Ranks per Domain : 9
[ 36 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 36 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 36 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3
[ 36 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,17,18,19,20,21,22,23,25,26,33,34,35,36,37,38,39,41,42,49,50,51,52,53,54,55,57,58
[ 36 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 36 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,17,18,19,20,21,22,23,25,26,33,34,35,36,37,38,39,41,42,49,50,51,52,53,54,55,57,58 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_36ranks_512MB.csv
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 3
[Rank 31] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 3
[Rank 27] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 3
[Rank 28] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 3
[Rank 30] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 3
[Rank 32] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 3
[Rank 29] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 33] Binding to NUMA domain 3
[Rank 33] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 3
[Rank 34] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 3
[Rank 35] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 2
[Rank 18] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 2
[Rank 22] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 2
[Rank 20] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 1
[Rank 10] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 2
[Rank 25] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 2
[Rank 26] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 2
[Rank 23] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 2
[Rank 19] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 2
[Rank 21] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 2
[Rank 24] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 1
[Rank 9] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_36ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 36
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_36ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x4621a0  |   0   | 282.29 |
|  001  | 2       |   0  | 0x461b00  |   0   | 307.53 |
|  002  | 3       |   0  | 0x461b00  |   0   | 294.05 |
|  003  | 4       |   0  | 0x461b00  |   0   | 144.72 |
|  004  | 5       |   0  | 0x461b00  |   0   | 178.92 |
|  005  | 6       |   0  | 0x461b00  |   0   | 124.40 |
|  006  | 7       |   0  | 0x461b00  |   0   | 189.27 |
|  007  | 9       |   0  | 0x461b00  |   0   | 259.05 |
|  008  | 10      |   0  | 0x461b00  |   0   | 248.94 |
|  009  | 17      |   1  | 0x461b40  |   1   | 395.35 |
|  010  | 18      |   1  | 0x461b40  |   1   | 198.82 |
|  011  | 19      |   1  | 0x461b40  |   1   | 188.44 |
|  012  | 20      |   1  | 0x461b40  |   1   | 289.63 |
|  013  | 21      |   1  | 0x461b40  |   1   | 279.59 |
|  014  | 22      |   1  | 0x461b40  |   1   | 160.60 |
|  015  | 23      |   1  | 0x461b40  |   1   | 121.91 |
|  016  | 25      |   1  | 0x461b40  |   1   | 262.05 |
|  017  | 26      |   1  | 0x461b40  |   1   | 235.29 |
|  018  | 33      |   2  | 0x461b80  |   2   | 321.92 |
|  019  | 34      |   2  | 0x461b80  |   2   | 359.01 |
|  020  | 35      |   2  | 0x461b80  |   2   | 373.30 |
|  021  | 36      |   2  | 0x461b80  |   2   | 151.00 |
|  022  | 37      |   2  | 0x461b80  |   2   | 129.56 |
|  023  | 38      |   2  | 0x461b80  |   2   | 121.85 |
|  024  | 39      |   2  | 0x461b80  |   2   | 129.83 |
|  025  | 41      |   2  | 0x461b80  |   2   | 262.53 |
|  026  | 42      |   2  | 0x461b80  |   2   | 234.77 |
|  027  | 49      |   3  | 0x461bc0  |   3   | 384.35 |
|  028  | 50      |   3  | 0x461bc0  |   3   | 207.42 |
|  029  | 51      |   3  | 0x461bc0  |   3   | 359.78 |
|  030  | 52      |   3  | 0x461bc0  |   3   | 167.27 |
|  031  | 53      |   3  | 0x461bc0  |   3   | 175.76 |
|  032  | 54      |   3  | 0x461bc0  |   3   | 121.81 |
|  033  | 55      |   3  | 0x461bc0  |   3   | 193.73 |
|  034  | 57      |   3  | 0x461bc0  |   3   | 257.19 |
|  035  | 58      |   3  | 0x461bc0  |   3   | 233.98 |
 =====================================================

[35] ===================== NUMA Statistics =====================
[35] Last Process: Rank 35
[35] Process ID: 11957
[35] Allocated Memory Size: 512 MB
[35] Running numastat...
[35] 
[35] Per-node process memory usage (in MBs) for PID 11957 (numa_mem_bench)
[35]                            Node 0          Node 1          Node 2          Node 3           Total
[35]                   --------------- --------------- --------------- --------------- ---------------
[35] Huge                         0.00            0.00            0.00            0.00            0.00
[35] Heap                         0.00            0.00            0.00          514.35          514.35
[35] Stack                        0.00            0.00            0.00            0.02            0.02
[35] Private                      8.19            1.23            2.44            4.44           16.30
[35] ----------------  --------------- --------------- --------------- --------------- ---------------
[35] Total                        8.19            1.23            2.44          518.80          530.67
[35]==========================================================

[ 36 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 40 RANKS ] Benchmark Configuration
[ 40 RANKS ] - Allocation Type  : sequential
[ 40 RANKS ] - Domains          : 0,1,2,3
[ 40 RANKS ] - Ranks per Domain : 10
[ 40 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 40 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 40 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3
[ 40 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,11,17,18,19,20,21,22,23,25,26,27,33,34,35,36,37,38,39,41,42,43,49,50,51,52,53,54,55,57,58,59
[ 40 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 40 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,11,17,18,19,20,21,22,23,25,26,27,33,34,35,36,37,38,39,41,42,43,49,50,51,52,53,54,55,57,58,59 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_40ranks_512MB.csv
[Rank 33] Binding to NUMA domain 3
[Rank 33] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 3
[Rank 34] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 3
[Rank 35] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 36] Binding to NUMA domain 3
[Rank 36] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 3
[Rank 30] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 3
[Rank 32] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 3
[Rank 31] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 2
[Rank 22] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 2
[Rank 27] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 39] Binding to NUMA domain 3
[Rank 39] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 2
[Rank 28] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 2
[Rank 21] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 2
[Rank 25] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 37] Binding to NUMA domain 3
[Rank 37] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 38] Binding to NUMA domain 3
[Rank 38] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 2
[Rank 29] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 2
[Rank 23] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 2
[Rank 24] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 2
[Rank 26] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 2
[Rank 20] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 0
[Rank 9] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 1
[Rank 10] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 1
[Rank 18] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 1
[Rank 19] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_40ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 40
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_40ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x46a080  |   0   | 299.02 |
|  001  | 2       |   0  | 0x4699e0  |   0   | 235.21 |
|  002  | 3       |   0  | 0x4699e0  |   0   | 259.67 |
|  003  | 4       |   0  | 0x4699e0  |   0   | 180.80 |
|  004  | 5       |   0  | 0x4699e0  |   0   | 248.67 |
|  005  | 6       |   0  | 0x4699e0  |   0   | 121.58 |
|  006  | 7       |   0  | 0x4699e0  |   0   | 133.30 |
|  007  | 9       |   0  | 0x4699e0  |   0   | 278.19 |
|  008  | 10      |   0  | 0x4699e0  |   0   | 281.40 |
|  009  | 11      |   0  | 0x4699e0  |   0   | 257.64 |
|  010  | 17      |   1  | 0x469a20  |   1   | 311.19 |
|  011  | 18      |   1  | 0x469a20  |   1   | 138.77 |
|  012  | 19      |   1  | 0x469a20  |   1   | 363.32 |
|  013  | 20      |   1  | 0x469a20  |   1   | 293.63 |
|  014  | 21      |   1  | 0x469a20  |   1   | 138.36 |
|  015  | 22      |   1  | 0x469a20  |   1   | 228.15 |
|  016  | 23      |   1  | 0x469a20  |   1   | 123.16 |
|  017  | 25      |   1  | 0x469a20  |   1   | 259.33 |
|  018  | 26      |   1  | 0x469a20  |   1   | 247.61 |
|  019  | 27      |   1  | 0x469a20  |   1   | 283.72 |
|  020  | 33      |   2  | 0x469a60  |   2   | 390.95 |
|  021  | 34      |   2  | 0x469a60  |   2   | 161.00 |
|  022  | 35      |   2  | 0x469a60  |   2   | 272.91 |
|  023  | 36      |   2  | 0x469a60  |   2   | 343.63 |
|  024  | 37      |   2  | 0x469a60  |   2   | 233.84 |
|  025  | 38      |   2  | 0x469a60  |   2   | 123.77 |
|  026  | 39      |   2  | 0x469a60  |   2   | 130.30 |
|  027  | 41      |   2  | 0x469a60  |   2   | 307.87 |
|  028  | 42      |   2  | 0x469a60  |   2   | 308.38 |
|  029  | 43      |   2  | 0x469a60  |   2   | 258.69 |
|  030  | 49      |   3  | 0x469aa0  |   3   | 367.86 |
|  031  | 50      |   3  | 0x469aa0  |   3   | 352.59 |
|  032  | 51      |   3  | 0x469aa0  |   3   | 244.86 |
|  033  | 52      |   3  | 0x469aa0  |   3   | 123.62 |
|  034  | 53      |   3  | 0x469aa0  |   3   | 268.26 |
|  035  | 54      |   3  | 0x469aa0  |   3   | 127.86 |
|  036  | 55      |   3  | 0x469aa0  |   3   | 148.38 |
|  037  | 57      |   3  | 0x469aa0  |   3   | 312.06 |
|  038  | 58      |   3  | 0x469aa0  |   3   | 317.47 |
|  039  | 59      |   3  | 0x469aa0  |   3   | 252.67 |
 =====================================================

[39] ===================== NUMA Statistics =====================
[39] Last Process: Rank 39
[39] Process ID: 13321
[39] Allocated Memory Size: 512 MB
[39] Running numastat...
[39] 
[39] Per-node process memory usage (in MBs) for PID 13321 (numa_mem_bench)
[39]                            Node 0          Node 1          Node 2          Node 3           Total
[39]                   --------------- --------------- --------------- --------------- ---------------
[39] Huge                         0.00            0.00            0.00            0.00            0.00
[39] Heap                         0.00            0.00            0.00          514.38          514.38
[39] Stack                        0.00            0.00            0.00            0.02            0.02
[39] Private                      8.38            1.21            2.20            4.51           16.30
[39] ----------------  --------------- --------------- --------------- --------------- ---------------
[39] Total                        8.38            1.21            2.20          518.91          530.71
[39]==========================================================

[ 40 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 44 RANKS ] Benchmark Configuration
[ 44 RANKS ] - Allocation Type  : sequential
[ 44 RANKS ] - Domains          : 0,1,2,3
[ 44 RANKS ] - Ranks per Domain : 11
[ 44 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 44 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 44 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3
[ 44 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,11,12,17,18,19,20,21,22,23,25,26,27,28,33,34,35,36,37,38,39,41,42,43,44,49,50,51,52,53,54,55,57,58,59,60
[ 44 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 44 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,11,12,17,18,19,20,21,22,23,25,26,27,28,33,34,35,36,37,38,39,41,42,43,44,49,50,51,52,53,54,55,57,58,59,60 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_44ranks_512MB.csv
[Rank 36] Binding to NUMA domain 3
[Rank 36] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 37] Binding to NUMA domain 3
[Rank 37] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 38] Binding to NUMA domain 3
[Rank 38] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 33] Binding to NUMA domain 3
[Rank 33] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 1
[Rank 11] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 3
[Rank 35] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 39] Binding to NUMA domain 3
[Rank 39] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 0
[Rank 10] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 43] Binding to NUMA domain 3
[Rank 43] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 42] Binding to NUMA domain 3
[Rank 42] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 41] Binding to NUMA domain 3
[Rank 41] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 3
[Rank 34] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 40] Binding to NUMA domain 3
[Rank 40] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 0
[Rank 9] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 2
[Rank 22] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 2
[Rank 23] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 2
[Rank 25] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 2
[Rank 28] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 2
[Rank 27] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 2
[Rank 29] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 2
[Rank 31] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 2
[Rank 32] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 2
[Rank 30] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 2
[Rank 26] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 2
[Rank 24] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 1
[Rank 19] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 1
[Rank 18] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 1
[Rank 20] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 1
[Rank 21] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_44ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 44
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_44ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x472000  |   0   | 369.69 |
|  001  | 2       |   0  | 0x471960  |   0   | 268.10 |
|  002  | 3       |   0  | 0x471960  |   0   | 265.82 |
|  003  | 4       |   0  | 0x471960  |   0   | 188.98 |
|  004  | 5       |   0  | 0x471960  |   0   | 260.89 |
|  005  | 6       |   0  | 0x471960  |   0   | 139.84 |
|  006  | 7       |   0  | 0x471960  |   0   | 122.98 |
|  007  | 9       |   0  | 0x471960  |   0   | 339.08 |
|  008  | 10      |   0  | 0x471960  |   0   | 314.58 |
|  009  | 11      |   0  | 0x471960  |   0   | 326.01 |
|  010  | 12      |   0  | 0x471960  |   0   | 280.19 |
|  011  | 17      |   1  | 0x4719a0  |   1   | 359.14 |
|  012  | 18      |   1  | 0x4719a0  |   1   | 320.23 |
|  013  | 19      |   1  | 0x4719a0  |   1   | 347.10 |
|  014  | 20      |   1  | 0x4719a0  |   1   | 248.26 |
|  015  | 21      |   1  | 0x4719a0  |   1   | 173.12 |
|  016  | 22      |   1  | 0x4719a0  |   1   | 129.55 |
|  017  | 23      |   1  | 0x4719a0  |   1   | 121.66 |
|  018  | 25      |   1  | 0x4719a0  |   1   | 292.93 |
|  019  | 26      |   1  | 0x4719a0  |   1   | 294.11 |
|  020  | 27      |   1  | 0x4719a0  |   1   | 290.76 |
|  021  | 28      |   1  | 0x4719a0  |   1   | 275.70 |
|  022  | 33      |   2  | 0x4719e0  |   2   | 399.16 |
|  023  | 34      |   2  | 0x4719e0  |   2   | 272.99 |
|  024  | 35      |   2  | 0x4719e0  |   2   | 246.21 |
|  025  | 36      |   2  | 0x4719e0  |   2   | 122.35 |
|  026  | 37      |   2  | 0x4719e0  |   2   | 265.78 |
|  027  | 38      |   2  | 0x4719e0  |   2   | 192.79 |
|  028  | 39      |   2  | 0x4719e0  |   2   | 143.55 |
|  029  | 41      |   2  | 0x4719e0  |   2   | 285.75 |
|  030  | 42      |   2  | 0x4719e0  |   2   | 304.62 |
|  031  | 43      |   2  | 0x4719e0  |   2   | 292.13 |
|  032  | 44      |   2  | 0x4719e0  |   2   | 300.11 |
|  033  | 49      |   3  | 0x471a20  |   3   | 323.26 |
|  034  | 50      |   3  | 0x471a20  |   3   | 339.75 |
|  035  | 51      |   3  | 0x471a20  |   3   | 299.34 |
|  036  | 52      |   3  | 0x471a20  |   3   | 209.67 |
|  037  | 53      |   3  | 0x471a20  |   3   | 273.12 |
|  038  | 54      |   3  | 0x471a20  |   3   | 131.30 |
|  039  | 55      |   3  | 0x471a20  |   3   | 123.26 |
|  040  | 57      |   3  | 0x471a20  |   3   | 348.73 |
|  041  | 58      |   3  | 0x471a20  |   3   | 309.74 |
|  042  | 59      |   3  | 0x471a20  |   3   | 354.60 |
|  043  | 60      |   3  | 0x471a20  |   3   | 284.47 |
 =====================================================

[43] ===================== NUMA Statistics =====================
[43] Last Process: Rank 43
[43] Process ID: 14366
[43] Allocated Memory Size: 512 MB
[43] Running numastat...
[43] 
[43] Per-node process memory usage (in MBs) for PID 14366 (numa_mem_bench)
[43]                            Node 0          Node 1          Node 2          Node 3           Total
[43]                   --------------- --------------- --------------- --------------- ---------------
[43] Huge                         0.00            0.00            0.00            0.00            0.00
[43] Heap                         0.00            0.00            0.00          514.41          514.41
[43] Stack                        0.00            0.00            0.00            0.02            0.02
[43] Private                      8.05            1.22            2.35            4.41           16.03
[43] ----------------  --------------- --------------- --------------- --------------- ---------------
[43] Total                        8.05            1.22            2.35          518.85          530.46
[43]==========================================================

[ 44 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 48 RANKS ] Benchmark Configuration
[ 48 RANKS ] - Allocation Type  : sequential
[ 48 RANKS ] - Domains          : 0,1,2,3
[ 48 RANKS ] - Ranks per Domain : 12
[ 48 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 48 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 48 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3
[ 48 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,11,12,13,17,18,19,20,21,22,23,25,26,27,28,29,33,34,35,36,37,38,39,41,42,43,44,45,49,50,51,52,53,54,55,57,58,59,60,61
[ 48 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 48 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,11,12,13,17,18,19,20,21,22,23,25,26,27,28,29,33,34,35,36,37,38,39,41,42,43,44,45,49,50,51,52,53,54,55,57,58,59,60,61 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_48ranks_512MB.csv
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 36] Binding to NUMA domain 3
[Rank 36] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 37] Binding to NUMA domain 3
[Rank 37] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 38] Binding to NUMA domain 3
[Rank 38] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 47] Binding to NUMA domain 3
[Rank 47] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 42] Binding to NUMA domain 3
[Rank 42] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 1
[Rank 12] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 40] Binding to NUMA domain 3
[Rank 40] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 2
[Rank 35] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 45] Binding to NUMA domain 3
[Rank 45] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 43] Binding to NUMA domain 3
[Rank 43] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 2
[Rank 28] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 2
[Rank 24] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 44] Binding to NUMA domain 3
[Rank 44] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 46] Binding to NUMA domain 3
[Rank 46] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 1
[Rank 23] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 2
[Rank 25] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 2
[Rank 29] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 2
[Rank 26] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 41] Binding to NUMA domain 3
[Rank 41] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 39] Binding to NUMA domain 3
[Rank 39] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 1
[Rank 18] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 2
[Rank 30] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 2
[Rank 32] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 2
[Rank 34] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 0
[Rank 11] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 2
[Rank 27] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 2
[Rank 31] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 33] Binding to NUMA domain 2
[Rank 33] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 0
[Rank 9] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 1
[Rank 20] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 1
[Rank 19] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 1
[Rank 22] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 0
[Rank 10] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 1
[Rank 21] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_48ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 48
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_48ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x479c90  |   0   | 329.24 |
|  001  | 2       |   0  | 0x4795f0  |   0   | 308.00 |
|  002  | 3       |   0  | 0x4795f0  |   0   | 401.76 |
|  003  | 4       |   0  | 0x4795f0  |   0   | 219.72 |
|  004  | 5       |   0  | 0x4795f0  |   0   | 125.01 |
|  005  | 6       |   0  | 0x4795f0  |   0   | 136.58 |
|  006  | 7       |   0  | 0x4795f0  |   0   | 124.93 |
|  007  | 9       |   0  | 0x4795f0  |   0   | 295.41 |
|  008  | 10      |   0  | 0x4795f0  |   0   | 321.70 |
|  009  | 11      |   0  | 0x4795f0  |   0   | 295.72 |
|  010  | 12      |   0  | 0x4795f0  |   0   | 314.14 |
|  011  | 13      |   0  | 0x4795f0  |   0   | 317.68 |
|  012  | 17      |   1  | 0x479630  |   1   | 341.99 |
|  013  | 18      |   1  | 0x479630  |   1   | 208.41 |
|  014  | 19      |   1  | 0x479630  |   1   | 370.97 |
|  015  | 20      |   1  | 0x479630  |   1   | 276.31 |
|  016  | 21      |   1  | 0x479630  |   1   | 188.41 |
|  017  | 22      |   1  | 0x479630  |   1   | 122.97 |
|  018  | 23      |   1  | 0x479630  |   1   | 165.31 |
|  019  | 25      |   1  | 0x479630  |   1   | 296.99 |
|  020  | 26      |   1  | 0x479630  |   1   | 331.04 |
|  021  | 27      |   1  | 0x479630  |   1   | 336.55 |
|  022  | 28      |   1  | 0x479630  |   1   | 292.58 |
|  023  | 29      |   1  | 0x479630  |   1   | 256.61 |
|  024  | 33      |   2  | 0x479670  |   2   | 226.63 |
|  025  | 34      |   2  | 0x479670  |   2   | 233.93 |
|  026  | 35      |   2  | 0x479670  |   2   | 288.23 |
|  027  | 36      |   2  | 0x479670  |   2   | 278.52 |
|  028  | 37      |   2  | 0x479670  |   2   | 212.58 |
|  029  | 38      |   2  | 0x479670  |   2   | 157.54 |
|  030  | 39      |   2  | 0x479670  |   2   | 123.58 |
|  031  | 41      |   2  | 0x479670  |   2   | 293.42 |
|  032  | 42      |   2  | 0x479670  |   2   | 270.97 |
|  033  | 43      |   2  | 0x479670  |   2   | 327.92 |
|  034  | 44      |   2  | 0x479670  |   2   | 344.53 |
|  035  | 45      |   2  | 0x479670  |   2   | 339.38 |
|  036  | 49      |   3  | 0x4796b0  |   3   | 394.76 |
|  037  | 50      |   3  | 0x4796b0  |   3   | 267.91 |
|  038  | 51      |   3  | 0x4796b0  |   3   | 188.01 |
|  039  | 52      |   3  | 0x4796b0  |   3   | 120.68 |
|  040  | 53      |   3  | 0x4796b0  |   3   | 134.00 |
|  041  | 54      |   3  | 0x4796b0  |   3   | 160.89 |
|  042  | 55      |   3  | 0x4796b0  |   3   | 243.67 |
|  043  | 57      |   3  | 0x4796b0  |   3   | 288.52 |
|  044  | 58      |   3  | 0x4796b0  |   3   | 296.88 |
|  045  | 59      |   3  | 0x4796b0  |   3   | 312.78 |
|  046  | 60      |   3  | 0x4796b0  |   3   | 271.80 |
|  047  | 61      |   3  | 0x4796b0  |   3   | 279.78 |
 =====================================================

[47] ===================== NUMA Statistics =====================
[47] Last Process: Rank 47
[47] Process ID: 15413
[47] Allocated Memory Size: 512 MB
[47] Running numastat...
[47] 
[47] Per-node process memory usage (in MBs) for PID 15413 (numa_mem_bench)
[47]                            Node 0          Node 1          Node 2          Node 3           Total
[47]                   --------------- --------------- --------------- --------------- ---------------
[47] Huge                         0.00            0.00            0.00            0.00            0.00
[47] Heap                         0.00            0.00            0.00          514.44          514.44
[47] Stack                        0.00            0.00            0.00            0.02            0.02
[47] Private                      8.43            1.28            2.32            4.45           16.48
[47] ----------------  --------------- --------------- --------------- --------------- ---------------
[47] Total                        8.43            1.28            2.32          518.91          530.95
[47]==========================================================

[ 48 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 52 RANKS ] Benchmark Configuration
[ 52 RANKS ] - Allocation Type  : sequential
[ 52 RANKS ] - Domains          : 0,1,2,3
[ 52 RANKS ] - Ranks per Domain : 13
[ 52 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 52 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 52 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3
[ 52 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,11,12,13,14,17,18,19,20,21,22,23,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,44,45,46,49,50,51,52,53,54,55,57,58,59,60,61,62
[ 52 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 52 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,11,12,13,14,17,18,19,20,21,22,23,25,26,27,28,29,30,33,34,35,36,37,38,39,41,42,43,44,45,46,49,50,51,52,53,54,55,57,58,59,60,61,62 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_52ranks_512MB.csv
[Rank 40] Binding to NUMA domain 3
[Rank 40] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 42] Binding to NUMA domain 3
[Rank 42] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 39] Binding to NUMA domain 3
[Rank 39] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 41] Binding to NUMA domain 3
[Rank 41] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 48] Binding to NUMA domain 3
[Rank 48] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 46] Binding to NUMA domain 3
[Rank 46] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 43] Binding to NUMA domain 3
[Rank 43] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 44] Binding to NUMA domain 3
[Rank 44] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 50] Binding to NUMA domain 3
[Rank 50] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 47] Binding to NUMA domain 3
[Rank 47] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 49] Binding to NUMA domain 3
[Rank 49] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 45] Binding to NUMA domain 3
[Rank 45] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 51] Binding to NUMA domain 3
[Rank 51] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 2
[Rank 26] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 37] Binding to NUMA domain 2
[Rank 37] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 33] Binding to NUMA domain 2
[Rank 33] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 2
[Rank 30] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 36] Binding to NUMA domain 2
[Rank 36] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 0
[Rank 10] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 1
[Rank 24] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 2
[Rank 27] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 2
[Rank 35] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 2
[Rank 29] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 2
[Rank 28] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 2
[Rank 32] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 38] Binding to NUMA domain 2
[Rank 38] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 2
[Rank 34] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 0
[Rank 12] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 0
[Rank 9] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 1
[Rank 13] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 1
[Rank 18] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 1
[Rank 19] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 1
[Rank 21] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 1
[Rank 22] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 2
[Rank 31] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 1
[Rank 20] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 1
[Rank 23] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 1
[Rank 25] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 0
[Rank 11] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_52ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 52
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_52ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x481df0  |   0   | 403.32 |
|  001  | 2       |   0  | 0x481750  |   0   | 241.96 |
|  002  | 3       |   0  | 0x481750  |   0   | 163.64 |
|  003  | 4       |   0  | 0x481750  |   0   | 315.54 |
|  004  | 5       |   0  | 0x481750  |   0   | 269.40 |
|  005  | 6       |   0  | 0x481750  |   0   | 176.56 |
|  006  | 7       |   0  | 0x481750  |   0   | 125.85 |
|  007  | 9       |   0  | 0x481750  |   0   | 310.02 |
|  008  | 10      |   0  | 0x481750  |   0   | 351.33 |
|  009  | 11      |   0  | 0x481750  |   0   | 328.72 |
|  010  | 12      |   0  | 0x481750  |   0   | 353.88 |
|  011  | 13      |   0  | 0x481750  |   0   | 292.88 |
|  012  | 14      |   0  | 0x481750  |   0   | 254.35 |
|  013  | 17      |   1  | 0x481790  |   1   | 372.33 |
|  014  | 18      |   1  | 0x481790  |   1   | 377.27 |
|  015  | 19      |   1  | 0x481790  |   1   | 278.40 |
|  016  | 20      |   1  | 0x481790  |   1   | 159.91 |
|  017  | 21      |   1  | 0x481790  |   1   | 170.44 |
|  018  | 22      |   1  | 0x481790  |   1   | 121.89 |
|  019  | 23      |   1  | 0x481790  |   1   | 175.55 |
|  020  | 25      |   1  | 0x481790  |   1   | 359.82 |
|  021  | 26      |   1  | 0x481790  |   1   | 370.96 |
|  022  | 27      |   1  | 0x481790  |   1   | 294.83 |
|  023  | 28      |   1  | 0x481790  |   1   | 376.51 |
|  024  | 29      |   1  | 0x481790  |   1   | 351.44 |
|  025  | 30      |   1  | 0x481790  |   1   | 252.82 |
|  026  | 33      |   2  | 0x4817d0  |   2   | 395.13 |
|  027  | 34      |   2  | 0x4817d0  |   2   | 121.81 |
|  028  | 35      |   2  | 0x4817d0  |   2   | 370.22 |
|  029  | 36      |   2  | 0x4817d0  |   2   | 210.76 |
|  030  | 37      |   2  | 0x4817d0  |   2   | 155.72 |
|  031  | 38      |   2  | 0x4817d0  |   2   | 304.12 |
|  032  | 39      |   2  | 0x4817d0  |   2   | 157.23 |
|  033  | 41      |   2  | 0x4817d0  |   2   | 294.33 |
|  034  | 42      |   2  | 0x4817d0  |   2   | 315.95 |
|  035  | 43      |   2  | 0x4817d0  |   2   | 317.51 |
|  036  | 44      |   2  | 0x4817d0  |   2   | 296.14 |
|  037  | 45      |   2  | 0x4817d0  |   2   | 251.87 |
|  038  | 46      |   2  | 0x4817d0  |   2   | 284.24 |
|  039  | 49      |   3  | 0x481810  |   3   | 394.69 |
|  040  | 50      |   3  | 0x481810  |   3   | 351.54 |
|  041  | 51      |   3  | 0x481810  |   3   | 294.24 |
|  042  | 52      |   3  | 0x481810  |   3   | 212.69 |
|  043  | 53      |   3  | 0x481810  |   3   | 246.67 |
|  044  | 54      |   3  | 0x481810  |   3   | 138.01 |
|  045  | 55      |   3  | 0x481810  |   3   | 121.24 |
|  046  | 57      |   3  | 0x481810  |   3   | 292.25 |
|  047  | 58      |   3  | 0x481810  |   3   | 373.67 |
|  048  | 59      |   3  | 0x481810  |   3   | 350.54 |
|  049  | 60      |   3  | 0x481810  |   3   | 363.80 |
|  050  | 61      |   3  | 0x481810  |   3   | 334.15 |
|  051  | 62      |   3  | 0x481810  |   3   | 269.15 |
 =====================================================

[51] ===================== NUMA Statistics =====================
[51] Last Process: Rank 51
[51] Process ID: 16652
[51] Allocated Memory Size: 512 MB
[51] Running numastat...
[51] 
[51] Per-node process memory usage (in MBs) for PID 16652 (numa_mem_bench)
[51]                            Node 0          Node 1          Node 2          Node 3           Total
[51]                   --------------- --------------- --------------- --------------- ---------------
[51] Huge                         0.00            0.00            0.00            0.00            0.00
[51] Heap                         0.00            0.00            0.00          514.48          514.48
[51] Stack                        0.00            0.00            0.00            0.02            0.02
[51] Private                      8.30            1.27            2.42            4.59           16.58
[51] ----------------  --------------- --------------- --------------- --------------- ---------------
[51] Total                        8.30            1.27            2.42          519.09          531.08
[51]==========================================================

[ 52 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 56 RANKS ] Benchmark Configuration
[ 56 RANKS ] - Allocation Type  : sequential
[ 56 RANKS ] - Domains          : 0,1,2,3
[ 56 RANKS ] - Ranks per Domain : 14
[ 56 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 16 in domain 1 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 24 in domain 1 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 32 in domain 2 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 40 in domain 2 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 48 in domain 3 as specified in SKIP_CORES
[ 56 RANKS ] - Skipping CPU 56 in domain 3 as specified in SKIP_CORES
[ 56 RANKS ] NUMA binding: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3
[ 56 RANKS ] CPU binding : 1,2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,58,59,60,61,62,63
[ 56 RANKS ] Executing : srun --unbuffered --nodes 1 --ntasks 56 --cpu-bind=map_cpu:1,2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54,55,57,58,59,60,61,62,63 --hint=nomultithread wrapper_numa.sh --numa=0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3 --executable ./numa_mem_bench -- --size=512 --csv=sequential_domains0,1,2,3_56ranks_512MB.csv
[Rank 48] Binding to NUMA domain 3
[Rank 48] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 7] Binding to NUMA domain 0
[Rank 7] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 14] Binding to NUMA domain 1
[Rank 14] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 46] Binding to NUMA domain 3
[Rank 46] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 20] Binding to NUMA domain 1
[Rank 20] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 42] Binding to NUMA domain 3
[Rank 42] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 43] Binding to NUMA domain 3
[Rank 43] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 45] Binding to NUMA domain 3
[Rank 45] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 47] Binding to NUMA domain 3
[Rank 47] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 8] Binding to NUMA domain 0
[Rank 8] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 19] Binding to NUMA domain 1
[Rank 19] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 4] Binding to NUMA domain 0
[Rank 4] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 9] Binding to NUMA domain 0
[Rank 9] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 13] Binding to NUMA domain 0
[Rank 13] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 6] Binding to NUMA domain 0
[Rank 6] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 52] Binding to NUMA domain 3
[Rank 52] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 2] Binding to NUMA domain 0
[Rank 2] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 49] Binding to NUMA domain 3
[Rank 49] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 0] Binding to NUMA domain 0
[Rank 0] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 50] Binding to NUMA domain 3
[Rank 50] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 17] Binding to NUMA domain 1
[Rank 17] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 54] Binding to NUMA domain 3
[Rank 54] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 10] Binding to NUMA domain 0
[Rank 10] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 44] Binding to NUMA domain 3
[Rank 44] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 51] Binding to NUMA domain 3
[Rank 51] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 53] Binding to NUMA domain 3
[Rank 53] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 15] Binding to NUMA domain 1
[Rank 15] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 55] Binding to NUMA domain 3
[Rank 55] Executing: numactl --membind=3 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 39] Binding to NUMA domain 2
[Rank 39] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 11] Binding to NUMA domain 0
[Rank 11] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 33] Binding to NUMA domain 2
[Rank 33] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 5] Binding to NUMA domain 0
[Rank 5] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 1] Binding to NUMA domain 0
[Rank 1] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 41] Binding to NUMA domain 2
[Rank 41] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 36] Binding to NUMA domain 2
[Rank 36] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 16] Binding to NUMA domain 1
[Rank 16] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 29] Binding to NUMA domain 2
[Rank 29] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 35] Binding to NUMA domain 2
[Rank 35] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 31] Binding to NUMA domain 2
[Rank 31] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 40] Binding to NUMA domain 2
[Rank 40] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 34] Binding to NUMA domain 2
[Rank 34] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 28] Binding to NUMA domain 2
[Rank 28] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 3] Binding to NUMA domain 0
[Rank 3] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 32] Binding to NUMA domain 2
[Rank 32] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 37] Binding to NUMA domain 2
[Rank 37] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 30] Binding to NUMA domain 2
[Rank 30] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 38] Binding to NUMA domain 2
[Rank 38] Executing: numactl --membind=2 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 21] Binding to NUMA domain 1
[Rank 21] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 24] Binding to NUMA domain 1
[Rank 24] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 22] Binding to NUMA domain 1
[Rank 22] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 23] Binding to NUMA domain 1
[Rank 23] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 25] Binding to NUMA domain 1
[Rank 25] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 26] Binding to NUMA domain 1
[Rank 26] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 18] Binding to NUMA domain 1
[Rank 18] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 12] Binding to NUMA domain 0
[Rank 12] Executing: numactl --membind=0 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 
[Rank 27] Binding to NUMA domain 1
[Rank 27] Executing: numactl --membind=1 ./numa_mem_bench '--size=512' '--csv=sequential_domains0,1,2,3_56ranks_512MB.csv' 

===================== Benchmark Information =====================
MPI Configuration:
  Number of ranks: 56
  Command line arguments:
    argv[0] = ./numa_mem_bench
    argv[1] = --size=512
    argv[2] = --csv=sequential_domains0,1,2,3_56ranks_512MB.csv

System Information:
  Page size: 4096 bytes
  Number of NUMA nodes: 4
  NUMA available: Yes
  Number of CPUs: 128
  Current CPU: 1
  Current NUMA node: 0

Note: NUMA memory binding should be controlled externally using numactl --membind=<node>
Mapping information written to mapping_check.log
=================================================================


 =====================================================
|  MPI  |        CPU     |         MEMORY    |LATENCY (ns)|
|-------|---------|------|-----------|-------|--------|
| Ranks | Cores   | NUMA |  Address  | NUMA  | 512MB  |
|-------|---------|------|-----------|-------|--------|
|  000  | 1       |   0  | 0x489c10  |   0   | 366.89 |
|  001  | 2       |   0  | 0x489570  |   0   | 339.19 |
|  002  | 3       |   0  | 0x489570  |   0   | 316.04 |
|  003  | 4       |   0  | 0x489570  |   0   | 303.58 |
|  004  | 5       |   0  | 0x489570  |   0   | 370.38 |
|  005  | 6       |   0  | 0x489570  |   0   | 298.78 |
|  006  | 7       |   0  | 0x489570  |   0   | 286.09 |
|  007  | 9       |   0  | 0x489570  |   0   | 292.43 |
|  008  | 10      |   0  | 0x489570  |   0   | 257.95 |
|  009  | 11      |   0  | 0x489570  |   0   | 350.92 |
|  010  | 12      |   0  | 0x489570  |   0   | 162.58 |
|  011  | 13      |   0  | 0x489570  |   0   | 317.06 |
|  012  | 14      |   0  | 0x489570  |   0   | 158.36 |
|  013  | 15      |   0  | 0x489570  |   0   | 129.71 |
|  014  | 17      |   1  | 0x4895b0  |   1   | 295.28 |
|  015  | 18      |   1  | 0x4895b0  |   1   | 371.89 |
|  016  | 19      |   1  | 0x4895b0  |   1   | 375.01 |
|  017  | 20      |   1  | 0x4895b0  |   1   | 260.99 |
|  018  | 21      |   1  | 0x4895b0  |   1   | 237.99 |
|  019  | 22      |   1  | 0x4895b0  |   1   | 174.90 |
|  020  | 23      |   1  | 0x4895b0  |   1   | 290.30 |
|  021  | 25      |   1  | 0x4895b0  |   1   | 325.75 |
|  022  | 26      |   1  | 0x4895b0  |   1   | 296.97 |
|  023  | 27      |   1  | 0x4895b0  |   1   | 343.29 |
|  024  | 28      |   1  | 0x4895b0  |   1   | 185.83 |
|  025  | 29      |   1  | 0x4895b0  |   1   | 303.31 |
|  026  | 30      |   1  | 0x4895b0  |   1   | 248.53 |
|  027  | 31      |   1  | 0x4895b0  |   1   | 122.72 |
|  028  | 33      |   2  | 0x4895f0  |   2   | 299.94 |
|  029  | 34      |   2  | 0x4895f0  |   2   | 336.63 |
|  030  | 35      |   2  | 0x4895f0  |   2   | 301.31 |
|  031  | 36      |   2  | 0x4895f0  |   2   | 311.02 |
|  032  | 37      |   2  | 0x4895f0  |   2   | 336.78 |
|  033  | 38      |   2  | 0x4895f0  |   2   | 262.45 |
|  034  | 39      |   2  | 0x4895f0  |   2   | 318.48 |
|  035  | 41      |   2  | 0x4895f0  |   2   | 292.76 |
|  036  | 42      |   2  | 0x4895f0  |   2   | 416.48 |
|  037  | 43      |   2  | 0x4895f0  |   2   | 134.47 |
|  038  | 44      |   2  | 0x4895f0  |   2   | 188.43 |
|  039  | 45      |   2  | 0x4895f0  |   2   | 123.67 |
|  040  | 46      |   2  | 0x4895f0  |   2   | 125.11 |
|  041  | 47      |   2  | 0x4895f0  |   2   | 210.00 |
|  042  | 49      |   3  | 0x489630  |   3   | 301.16 |
|  043  | 50      |   3  | 0x489630  |   3   | 328.20 |
|  044  | 51      |   3  | 0x489630  |   3   | 356.40 |
|  045  | 52      |   3  | 0x489630  |   3   | 279.81 |
|  046  | 53      |   3  | 0x489630  |   3   | 362.46 |
|  047  | 54      |   3  | 0x489630  |   3   | 255.51 |
|  048  | 55      |   3  | 0x489630  |   3   | 270.06 |
|  049  | 57      |   3  | 0x489630  |   3   | 288.77 |
|  050  | 58      |   3  | 0x489630  |   3   | 285.57 |
|  051  | 59      |   3  | 0x489630  |   3   | 314.49 |
|  052  | 60      |   3  | 0x489630  |   3   | 159.91 |
|  053  | 61      |   3  | 0x489630  |   3   | 143.78 |
|  054  | 62      |   3  | 0x489630  |   3   | 126.72 |
|  055  | 63      |   3  | 0x489630  |   3   | 259.74 |
 =====================================================

[55] ===================== NUMA Statistics =====================
[55] Last Process: Rank 55
[55] Process ID: 17990
[55] Allocated Memory Size: 512 MB
[55] Running numastat...
[55] 
[55] Per-node process memory usage (in MBs) for PID 17990 (numa_mem_bench)
[55]                            Node 0          Node 1          Node 2          Node 3           Total
[55]                   --------------- --------------- --------------- --------------- ---------------
[55] Huge                         0.00            0.00            0.00            0.00            0.00
[55] Heap                         0.00            0.00            0.00          514.51          514.51
[55] Stack                        0.00            0.00            0.00            0.02            0.02
[55] Private                      8.30            1.23            2.23            4.55           16.31
[55] ----------------  --------------- --------------- --------------- --------------- ---------------
[55] Total                        8.30            1.23            2.23          519.07          530.84
[55]==========================================================

[ 56 RANKS ] Benchmark completed successfully
================================================================================

================================================================================
[ 60 RANKS ] Benchmark Configuration
[ 60 RANKS ] - Allocation Type  : sequential
[ 60 RANKS ] - Domains          : 0,1,2,3
[ 60 RANKS ] - Ranks per Domain : 15
[ 60 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 60 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 60 RANKS ] Notice: Can only use 14 cores on domain 0 (requested 15)
[ 60 RANKS ] Domain 0 has 16 total cores but 2 were excluded by SKIP_CORES
[ 60 RANKS ] Limiting to the maximum available cores (14)
[ 60 RANKS ] Skipping configuration with 15 ranks on domain 0.
[ 60 RANKS ] Insufficient usable cores for this configuration. Skipping benchmark.
================================================================================

================================================================================
[ 64 RANKS ] Benchmark Configuration
[ 64 RANKS ] - Allocation Type  : sequential
[ 64 RANKS ] - Domains          : 0,1,2,3
[ 64 RANKS ] - Ranks per Domain : 16
[ 64 RANKS ] - Skipping CPU 0 in domain 0 as specified in SKIP_CORES
[ 64 RANKS ] - Skipping CPU 8 in domain 0 as specified in SKIP_CORES
[ 64 RANKS ] Notice: Can only use 14 cores on domain 0 (requested 16)
[ 64 RANKS ] Domain 0 has 16 total cores but 2 were excluded by SKIP_CORES
[ 64 RANKS ] Limiting to the maximum available cores (14)
[ 64 RANKS ] Skipping configuration with 16 ranks on domain 0.
[ 64 RANKS ] Insufficient usable cores for this configuration. Skipping benchmark.
================================================================================

================================================================================
                     Benchmark Run Summary                       
================================================================================
Date: Fri 18 Apr 2025 01:25:39 PM EEST
Job Directory: /pfs/lustrep4/users/pourroy/CODE/Numa-Mem-Bench/examples/FINAL/example3_all_cores_512MB/results_scaling/job_10417453_lumig_all_cores_sequential

Configuration:
--------------------------------------------------------------------------------
  System: LUMI
  Partition: PART-G
  NUMA Nodes: 4
  CCDs per NUMA domain: 2
  Cores per CCD: 8 (calculated)
  Skipped Cores: 24 16 0 8 56 48 40 32

  CPU ranges:
    Domain 0: 0-15,64-79
    Domain 1: 16-31,80-95
    Domain 2: 32-47,96-111
    Domain 3: 48-63,112-127

  Mode: sequential
  Domains: 0,1,2,3
  Memory Sizes: 512
  Dry Run: false
Benchmarks completed successfully
All results will be saved under: /pfs/lustrep4/users/pourroy/CODE/Numa-Mem-Bench/examples/FINAL/example3_all_cores_512MB/results_scaling/job_10417453_lumig_all_cores_sequential
Successfully cleaned up symbolic links [total removed: 2]
Benchmark run completed at Fri 18 Apr 2025 01:25:39 PM EEST
================================================================================
